var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(a){var c=0;return function(){return c<a.length?{done:!1,value:a[c++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.makeIterator=function(a){var c="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return c?c.call(a):$jscomp.arrayIterator(a)};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;
$jscomp.objectCreate=$jscomp.ASSUME_ES5||"function"==typeof Object.create?Object.create:function(a){var c=function(){};c.prototype=a;return new c};$jscomp.underscoreProtoCanBeSet=function(){var a={a:!0},c={};try{return c.__proto__=a,c.a}catch(b){}return!1};$jscomp.setPrototypeOf="function"==typeof Object.setPrototypeOf?Object.setPrototypeOf:$jscomp.underscoreProtoCanBeSet()?function(a,c){a.__proto__=c;if(a.__proto__!==c)throw new TypeError(a+" is not extensible");return a}:null;
$jscomp.inherits=function(a,c){a.prototype=$jscomp.objectCreate(c.prototype);a.prototype.constructor=a;if($jscomp.setPrototypeOf){var b=$jscomp.setPrototypeOf;b(a,c)}else for(b in c)if("prototype"!=b)if(Object.defineProperties){var d=Object.getOwnPropertyDescriptor(c,b);d&&Object.defineProperty(a,b,d)}else a[b]=c[b];a.superClass_=c.prototype};var ArxivExtractor=function(a,c,b){return Extractor.call(this,a,c,void 0===b?!1:b)||this};$jscomp.inherits(ArxivExtractor,Extractor);
ArxivExtractor.prototype.extract=function(a){a=[];for(var c=$jscomp.makeIterator(this.blocks),b=c.next();!b.done;b=c.next()){b=b.value;var d={ids:[]},e=b.querySelector(".list-title.is-inline-block > a");e&&(d.ids.push({id:e.href.split("/").slice(-1)[0],src:"arxiv"}),d.title=this.getTitle(b,"p.title.is-5.mathjax").trim(),d.textUrl=e.href+".pdf",d.textType="PDF",d.authors=this.getAuthors(b,".authors"),d.abstractText=this.getAbstract(b,".abstract-full").trim().slice(0,-15),d.year=this.getYear(b,"p.is-size-7"),
a.push(d))}return a};ArxivExtractor.prototype.getAuthors=function(a,c){var b=a.querySelector(c),d=[];if(!b&&this.verbose)console.log("EXTRACTOR ("+this.name+"): authors aren't extracted");else if(this.verbose){console.log("EXTRACTOR ("+this.name+"): authors extracted");b=b.innerText.replace("Authors:","").trim().split(", ");b=$jscomp.makeIterator(b);for(var e=b.next();!e.done;e=b.next())d.push({fullName:e.value,ids:[]});console.log(d)}return d};
ArxivExtractor.prototype.getYear=function(a,c){var b=a.querySelector(c),d=2E3;!b&&this.verbose?console.log("EXTRACTOR ("+this.name+"): year isn't extracted"):this.verbose&&(d=parseInt(b.innerText.match(/\d{4}/g)[0]),console.log("EXTRACTOR ("+this.name+"): extracted year = "+d));return d};
ArxivExtractor.prototype.extractArticleFromPage=function(a){var c=window.location.href;a=document.querySelector(void 0===a?"div#content":a);this.blocks=[a];var b={ids:[{id:c.split("/").slice(-1)[0],src:"arxiv"}]};b.title=this.getTitle(a,"h1.title.mathjax");b.authors=this.getAuthors(a,"div.authors");b.year=this.getYear(a,"div.dateline");b.abstractText=this.getAbstract(a,"blockquote.abstract.mathjax");b.textUrl=c+".pdf";b.textType="PDF";return[b]};
