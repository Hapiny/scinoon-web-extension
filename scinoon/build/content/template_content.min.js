var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.makeIterator=function(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):$jscomp.arrayIterator(a)};
var CONTENT_DEBUG=!0,$=window.$.noConflict(!0),hostname=window.location.hostname,extractor=void 0,observerProps={childList:!0,subtree:!0,attributeFilter:["style"]},scholar=void 0;-1!==hostname.search("google")?scholar=scholars.google:-1!==hostname.search("semantic")?scholar=scholars.semantic:-1!==hostname.search("arxiv")?scholar=scholars.arxiv:-1!==hostname.search("ncbi.nlm.nih.gov")&&(scholar=scholars.pubmed);var baseLink="http://"+hostname+scholar.searchPath,searchString=scholar.getSearchString();
function injectLocalCss(){$("<link>",{rel:"stylesheet",type:"text/css",href:browser.runtime.getURL("lib/scholar_styles.css")}).appendTo("head")}
function parseSearchResult(a,b){var c=b?b:a.extract(document);CONTENT_DEBUG&&(console.log("CONTENT: extractor result"),console.log(c));browser.storage.local.get("anotherMaps").then(function(a){a=a.anotherMaps;for(var b=0;b<a.length;b++){var h=a[b].split("/").slice(-1)[0];browser.runtime.sendMessage({name:messages.RETURN_EXTRACTED,data:{url:window.location.href,articles:c,map:h}})}})}
function handleExtractedTermsResearch(a){var b=document.getElementById("researchTermsBox");addTermsGroup("Common terms",a.data,b,searchString)}function handleExtractedTermsClusters(a){var b=document.getElementById("termsBox"),c=document.createElement("div");c.id="clustersTermsBox";b.appendChild(c);a=$jscomp.makeIterator(a.data);for(b=a.next();!b.done;b=a.next())b=b.value,addTermsGroup(b.clName,b.terms,c,searchString)}
function handleNormalizedData(a){function b(a){a.innerText="Added!";a.disabled=!0}var c=a.data,h=a.map;CONTENT_DEBUG&&(console.log("CONTENT: handle normalized data"),console.log(c));var m=extractor.blocks;for(a={$jscomp$loop$prop$index$6:0};a.$jscomp$loop$prop$index$6<c.length;a={$jscomp$loop$prop$index$6:a.$jscomp$loop$prop$index$6},a.$jscomp$loop$prop$index$6++)browser.storage.local.get("anotherMaps").then(function(a){return function(k){k=k.anotherMaps;for(var d={},l=0;l<k.length;d={$jscomp$loop$prop$articleId$8:d.$jscomp$loop$prop$articleId$8,
$jscomp$loop$prop$button$9:d.$jscomp$loop$prop$button$9},l++){var e=k[l].split("/").slice(-1)[0];if(e===h){var f=c[a.$jscomp$loop$prop$index$6];d.$jscomp$loop$prop$articleId$8=f.article.id;if(d.$jscomp$loop$prop$articleId$8.sourceName===scholar.articleSourceName){var g=m[a.$jscomp$loop$prop$index$6];d.$jscomp$loop$prop$button$9=g.querySelector("#"+e+".add_to_rm_button");d.$jscomp$loop$prop$button$9?(f.isExist&&h===e?b(d.$jscomp$loop$prop$button$9):d.$jscomp$loop$prop$button$9.innerText='Add to "'+
e+'" research map',d.$jscomp$loop$prop$button$9.addEventListener("click",function(a){return function(c){browser.runtime.sendMessage({name:messages.SELECTED_ARTICLES,data:[a.$jscomp$loop$prop$articleId$8],map:a.$jscomp$loop$prop$button$9.id});b(this)}}(d))):(console.log("CONTENT: error in button change"),console.log("#add_to_rm_"+a.$jscomp$loop$prop$index$6),console.log($(".btn.add_to_rm_button")));f.isViewed||(e=scholar.titleFieldSeclector(g))&&!e.querySelector(".btn.btn-info")&&(f=document.createElement("div"),
f.className="bootstrap",g=document.createElement("span"),g.className="btn btn-info btn-sm",g.innerHTML="New",g.style.marginRight="5px",f.appendChild(g),e.insertBefore(f,e.firstChild))}}}}}(a))}browser.runtime.onMessage.addListener(function(a){switch(a.name){case messages.NORMALIZED_DATA:handleNormalizedData(a);break;case messages.EXTRACTED_TERMS_RESEARCH:handleExtractedTermsResearch(a);break;case messages.EXTRACTED_TERMS_CLUSTERS:handleExtractedTermsClusters(a)}});browser.runtime.sendMessage({name:messages.GET_TERMS});
injectLocalCss();createTermsPanel();
switch(scholar.name){case "google":extractor=new GSExtractor("google",scholar.articleBlocksSelector,CONTENT_DEBUG);var url=window.location.href;if(-1!==url.search("/citations?")){var extracted=extractor.extractArticlesFromAuthorPage();createAddButtons(extractor.blocks);parseSearchResult(extractor,extracted);var observer=new MutationObserver(function(a,b){a.forEach(function(a){"TBODY"==a.target.tagName&&(a=extractor.extractArticlesFromAuthorPage(),removeAllNodes("#gsc_a_b",".bootstrap"),createAddButtons(extractor.blocks),
parseSearchResult(extractor,a))})});observer.observe(document,observerProps)}else createAddButtons(),parseSearchResult(extractor);break;case "semantic":extractor=new SSExtractor("semantic",scholar.articleBlocksSelector,CONTENT_DEBUG);window.onload=function(){var a=window.location.href;-1!==a.search("/paper/")?(addButtonOnArticlePage(".flex-container.flex-wrap.flex-paper-actions-group"),a=extractor.extractArticleFromPage(),parseSearchResult(extractor,a)):-1!==a.search("/author/")&&(createAddButtons(),
parseSearchResult(extractor))};var observer$3=new MutationObserver(function(a,b){a.forEach(function(a){if("TITLE"===a.target.tagName){var b=window.location.href;a=a.target.innerText;CONTENT_DEBUG&&console.log('CONTENT: new title "'+a+'"');-1!==b.search("/search")||-1!==b.search("/author/")?(createAddButtons(),parseSearchResult(extractor)):-1!==b.search("/paper/")&&(addButtonOnArticlePage(".flex-container.flex-wrap.flex-paper-actions-group"),b=extractor.extractArticleFromPage(),parseSearchResult(extractor,
b))}})});observer$3.observe(document,observerProps);break;case "arxiv":extractor=new ArxivExtractor("arxiv",scholar.articleBlocksSelector,CONTENT_DEBUG);url=window.location.href;if(-1!==url.search("/search/"))createAddButtons(),parseSearchResult(extractor);else if(-1!==url.search("/abs/")){addButtonOnArticlePage("div#content");var article=extractor.extractArticleFromPage();parseSearchResult(extractor,article)}break;case "pubmed":extractor=new PubmedExtractor("pubmed",scholar.articleBlocksSelector,
CONTENT_DEBUG);url=window.location.href;var urlParts=url.split("/");if(-1!==url.search("/?term=")||urlParts.indexOf("pmc")===urlParts.length-1||urlParts.indexOf("pubmed")===urlParts.length-1)createAddButtons(),parseSearchResult(extractor);else{addButtonOnArticlePage("div.aux");var article$4=extractor.extractArticleFromPage();parseSearchResult(extractor,article$4)}};
